name: CI-CD to GHCR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle (skip tests)
      run: ./gradlew build -x test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver: docker-container

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and Push Docker Image to GHCR
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/platform-core:latest

    - name: Copy nginx.conf to remote nginx directory
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_KEY }}
        source: "./nginx.conf"
        target: "/home/ubuntu/platform/nginx/"
        overwrite: true

    - name: Copy compose.yaml to remote platform directory
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_KEY }}
        source: "./compose.yaml"
        target: "/home/ubuntu/platform/"
        overwrite: true

    # SSH로 접속해서 docker compose 실행
    - name: Deploy via SSH to remote server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_KEY }}
        script: |
          cd /home/ubuntu/platform
          
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          
          export ORACLE_WALLET_PATH=${{ secrets.ORACLE_WALLET_PATH }}
          export ORACLE_URL=${{ secrets.ORACLE_URL }}
          export ORACLE_USERNAME=${{ secrets.ORACLE_USERNAME }}
          export ORACLE_PASSWORD=${{ secrets.ORACLE_PASSWORD }}
          export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          export GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}
          export GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}
          export DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          export JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
          export DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          export ADMIN_DOMAIN=${{ secrets.ADMIN_DOMAIN }}
          export CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
          export ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
          export TZ=Asia/Seoul
          
          docker compose pull
          docker compose up -d
          
